/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.confluent.developer;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class EstabComlDto extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5637994303465554731L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EstabComlDto\",\"namespace\":\"io.confluent.developer\",\"fields\":[{\"name\":\"idEcGrupo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"idEc\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"tipoEc\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"dataAlteracao\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"liberado\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EstabComlDto> ENCODER =
      new BinaryMessageEncoder<EstabComlDto>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EstabComlDto> DECODER =
      new BinaryMessageDecoder<EstabComlDto>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EstabComlDto> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EstabComlDto> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EstabComlDto> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EstabComlDto>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EstabComlDto to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EstabComlDto from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EstabComlDto instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EstabComlDto fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String idEcGrupo;
   private java.lang.String idEc;
   private java.lang.String tipoEc;
   private java.lang.String dataAlteracao;
   private java.lang.String liberado;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EstabComlDto() {}

  /**
   * All-args constructor.
   * @param idEcGrupo The new value for idEcGrupo
   * @param idEc The new value for idEc
   * @param tipoEc The new value for tipoEc
   * @param dataAlteracao The new value for dataAlteracao
   * @param liberado The new value for liberado
   */
  public EstabComlDto(java.lang.String idEcGrupo, java.lang.String idEc, java.lang.String tipoEc, java.lang.String dataAlteracao, java.lang.String liberado) {
    this.idEcGrupo = idEcGrupo;
    this.idEc = idEc;
    this.tipoEc = tipoEc;
    this.dataAlteracao = dataAlteracao;
    this.liberado = liberado;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return idEcGrupo;
    case 1: return idEc;
    case 2: return tipoEc;
    case 3: return dataAlteracao;
    case 4: return liberado;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: idEcGrupo = value$ != null ? value$.toString() : null; break;
    case 1: idEc = value$ != null ? value$.toString() : null; break;
    case 2: tipoEc = value$ != null ? value$.toString() : null; break;
    case 3: dataAlteracao = value$ != null ? value$.toString() : null; break;
    case 4: liberado = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'idEcGrupo' field.
   * @return The value of the 'idEcGrupo' field.
   */
  public java.lang.String getIdEcGrupo() {
    return idEcGrupo;
  }


  /**
   * Sets the value of the 'idEcGrupo' field.
   * @param value the value to set.
   */
  public void setIdEcGrupo(java.lang.String value) {
    this.idEcGrupo = value;
  }

  /**
   * Gets the value of the 'idEc' field.
   * @return The value of the 'idEc' field.
   */
  public java.lang.String getIdEc() {
    return idEc;
  }


  /**
   * Sets the value of the 'idEc' field.
   * @param value the value to set.
   */
  public void setIdEc(java.lang.String value) {
    this.idEc = value;
  }

  /**
   * Gets the value of the 'tipoEc' field.
   * @return The value of the 'tipoEc' field.
   */
  public java.lang.String getTipoEc() {
    return tipoEc;
  }


  /**
   * Sets the value of the 'tipoEc' field.
   * @param value the value to set.
   */
  public void setTipoEc(java.lang.String value) {
    this.tipoEc = value;
  }

  /**
   * Gets the value of the 'dataAlteracao' field.
   * @return The value of the 'dataAlteracao' field.
   */
  public java.lang.String getDataAlteracao() {
    return dataAlteracao;
  }


  /**
   * Sets the value of the 'dataAlteracao' field.
   * @param value the value to set.
   */
  public void setDataAlteracao(java.lang.String value) {
    this.dataAlteracao = value;
  }

  /**
   * Gets the value of the 'liberado' field.
   * @return The value of the 'liberado' field.
   */
  public java.lang.String getLiberado() {
    return liberado;
  }


  /**
   * Sets the value of the 'liberado' field.
   * @param value the value to set.
   */
  public void setLiberado(java.lang.String value) {
    this.liberado = value;
  }

  /**
   * Creates a new EstabComlDto RecordBuilder.
   * @return A new EstabComlDto RecordBuilder
   */
  public static io.confluent.developer.EstabComlDto.Builder newBuilder() {
    return new io.confluent.developer.EstabComlDto.Builder();
  }

  /**
   * Creates a new EstabComlDto RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EstabComlDto RecordBuilder
   */
  public static io.confluent.developer.EstabComlDto.Builder newBuilder(io.confluent.developer.EstabComlDto.Builder other) {
    if (other == null) {
      return new io.confluent.developer.EstabComlDto.Builder();
    } else {
      return new io.confluent.developer.EstabComlDto.Builder(other);
    }
  }

  /**
   * Creates a new EstabComlDto RecordBuilder by copying an existing EstabComlDto instance.
   * @param other The existing instance to copy.
   * @return A new EstabComlDto RecordBuilder
   */
  public static io.confluent.developer.EstabComlDto.Builder newBuilder(io.confluent.developer.EstabComlDto other) {
    if (other == null) {
      return new io.confluent.developer.EstabComlDto.Builder();
    } else {
      return new io.confluent.developer.EstabComlDto.Builder(other);
    }
  }

  /**
   * RecordBuilder for EstabComlDto instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EstabComlDto>
    implements org.apache.avro.data.RecordBuilder<EstabComlDto> {

    private java.lang.String idEcGrupo;
    private java.lang.String idEc;
    private java.lang.String tipoEc;
    private java.lang.String dataAlteracao;
    private java.lang.String liberado;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.confluent.developer.EstabComlDto.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.idEcGrupo)) {
        this.idEcGrupo = data().deepCopy(fields()[0].schema(), other.idEcGrupo);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.idEc)) {
        this.idEc = data().deepCopy(fields()[1].schema(), other.idEc);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.tipoEc)) {
        this.tipoEc = data().deepCopy(fields()[2].schema(), other.tipoEc);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.dataAlteracao)) {
        this.dataAlteracao = data().deepCopy(fields()[3].schema(), other.dataAlteracao);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.liberado)) {
        this.liberado = data().deepCopy(fields()[4].schema(), other.liberado);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing EstabComlDto instance
     * @param other The existing instance to copy.
     */
    private Builder(io.confluent.developer.EstabComlDto other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.idEcGrupo)) {
        this.idEcGrupo = data().deepCopy(fields()[0].schema(), other.idEcGrupo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.idEc)) {
        this.idEc = data().deepCopy(fields()[1].schema(), other.idEc);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tipoEc)) {
        this.tipoEc = data().deepCopy(fields()[2].schema(), other.tipoEc);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dataAlteracao)) {
        this.dataAlteracao = data().deepCopy(fields()[3].schema(), other.dataAlteracao);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.liberado)) {
        this.liberado = data().deepCopy(fields()[4].schema(), other.liberado);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'idEcGrupo' field.
      * @return The value.
      */
    public java.lang.String getIdEcGrupo() {
      return idEcGrupo;
    }


    /**
      * Sets the value of the 'idEcGrupo' field.
      * @param value The value of 'idEcGrupo'.
      * @return This builder.
      */
    public io.confluent.developer.EstabComlDto.Builder setIdEcGrupo(java.lang.String value) {
      validate(fields()[0], value);
      this.idEcGrupo = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'idEcGrupo' field has been set.
      * @return True if the 'idEcGrupo' field has been set, false otherwise.
      */
    public boolean hasIdEcGrupo() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'idEcGrupo' field.
      * @return This builder.
      */
    public io.confluent.developer.EstabComlDto.Builder clearIdEcGrupo() {
      idEcGrupo = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'idEc' field.
      * @return The value.
      */
    public java.lang.String getIdEc() {
      return idEc;
    }


    /**
      * Sets the value of the 'idEc' field.
      * @param value The value of 'idEc'.
      * @return This builder.
      */
    public io.confluent.developer.EstabComlDto.Builder setIdEc(java.lang.String value) {
      validate(fields()[1], value);
      this.idEc = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'idEc' field has been set.
      * @return True if the 'idEc' field has been set, false otherwise.
      */
    public boolean hasIdEc() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'idEc' field.
      * @return This builder.
      */
    public io.confluent.developer.EstabComlDto.Builder clearIdEc() {
      idEc = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'tipoEc' field.
      * @return The value.
      */
    public java.lang.String getTipoEc() {
      return tipoEc;
    }


    /**
      * Sets the value of the 'tipoEc' field.
      * @param value The value of 'tipoEc'.
      * @return This builder.
      */
    public io.confluent.developer.EstabComlDto.Builder setTipoEc(java.lang.String value) {
      validate(fields()[2], value);
      this.tipoEc = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'tipoEc' field has been set.
      * @return True if the 'tipoEc' field has been set, false otherwise.
      */
    public boolean hasTipoEc() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'tipoEc' field.
      * @return This builder.
      */
    public io.confluent.developer.EstabComlDto.Builder clearTipoEc() {
      tipoEc = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataAlteracao' field.
      * @return The value.
      */
    public java.lang.String getDataAlteracao() {
      return dataAlteracao;
    }


    /**
      * Sets the value of the 'dataAlteracao' field.
      * @param value The value of 'dataAlteracao'.
      * @return This builder.
      */
    public io.confluent.developer.EstabComlDto.Builder setDataAlteracao(java.lang.String value) {
      validate(fields()[3], value);
      this.dataAlteracao = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'dataAlteracao' field has been set.
      * @return True if the 'dataAlteracao' field has been set, false otherwise.
      */
    public boolean hasDataAlteracao() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'dataAlteracao' field.
      * @return This builder.
      */
    public io.confluent.developer.EstabComlDto.Builder clearDataAlteracao() {
      dataAlteracao = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'liberado' field.
      * @return The value.
      */
    public java.lang.String getLiberado() {
      return liberado;
    }


    /**
      * Sets the value of the 'liberado' field.
      * @param value The value of 'liberado'.
      * @return This builder.
      */
    public io.confluent.developer.EstabComlDto.Builder setLiberado(java.lang.String value) {
      validate(fields()[4], value);
      this.liberado = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'liberado' field has been set.
      * @return True if the 'liberado' field has been set, false otherwise.
      */
    public boolean hasLiberado() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'liberado' field.
      * @return This builder.
      */
    public io.confluent.developer.EstabComlDto.Builder clearLiberado() {
      liberado = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EstabComlDto build() {
      try {
        EstabComlDto record = new EstabComlDto();
        record.idEcGrupo = fieldSetFlags()[0] ? this.idEcGrupo : (java.lang.String) defaultValue(fields()[0]);
        record.idEc = fieldSetFlags()[1] ? this.idEc : (java.lang.String) defaultValue(fields()[1]);
        record.tipoEc = fieldSetFlags()[2] ? this.tipoEc : (java.lang.String) defaultValue(fields()[2]);
        record.dataAlteracao = fieldSetFlags()[3] ? this.dataAlteracao : (java.lang.String) defaultValue(fields()[3]);
        record.liberado = fieldSetFlags()[4] ? this.liberado : (java.lang.String) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EstabComlDto>
    WRITER$ = (org.apache.avro.io.DatumWriter<EstabComlDto>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EstabComlDto>
    READER$ = (org.apache.avro.io.DatumReader<EstabComlDto>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.idEcGrupo);

    out.writeString(this.idEc);

    out.writeString(this.tipoEc);

    out.writeString(this.dataAlteracao);

    out.writeString(this.liberado);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.idEcGrupo = in.readString();

      this.idEc = in.readString();

      this.tipoEc = in.readString();

      this.dataAlteracao = in.readString();

      this.liberado = in.readString();

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.idEcGrupo = in.readString();
          break;

        case 1:
          this.idEc = in.readString();
          break;

        case 2:
          this.tipoEc = in.readString();
          break;

        case 3:
          this.dataAlteracao = in.readString();
          break;

        case 4:
          this.liberado = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










